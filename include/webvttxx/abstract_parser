#ifndef __WEBVTTXX_ABSTRACT_PARSER__
# define __WEBVTTXX_ABSTRACT_PARSER__
# include <webvtt/parser.h>
# include "base"
# include "error"

namespace WebVTT
{

class Cue;
class AbstractParser
{
public:
  AbstractParser();
  virtual ~AbstractParser();

  virtual bool reportError( const Error &error ) = 0;
  virtual void parsedCue( Cue &cue ) = 0;

protected:
  ::webvtt_status parseChunk( const void *chunk, webvtt_uint length, bool finalChunk );

private:
  static void WEBVTT_CALLBACK __parsedCue( void *userdata, webvtt_cue *cue );
  static int WEBVTT_CALLBACK __reportError( void *userdata, webvtt_uint line, webvtt_uint col, webvtt_error error );

  webvtt_parser parser;
};

}

#endif